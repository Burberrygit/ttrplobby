name: Build & Deploy to Netlify (Plugin Build)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (pre-install)
        run: |
          echo "PWD:"
          pwd
          echo "ROOT:"
          ls -la
          echo "frontend/:"
          ls -la frontend || true
          echo "frontend/package-lock.json exists?"
          test -f frontend/package-lock.json && echo "YES" || echo "NO"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Node & npm versions
        run: |
          node -v
          npm -v

      # Try ci if lockfile present; otherwise fall back to install
      - name: Install deps (ci OR install)
        run: |
          if [ -f frontend/package-lock.json ]; then
            echo "Using npm ci (lockfile present)"
            cd frontend && npm ci
          else
            echo "Lockfile missing; using npm install"
            cd frontend && npm install
          fi

      - name: Verify deps
        run: |
          test -d frontend/node_modules && echo "node_modules present" || (echo "node_modules missing" && exit 1)
          cat frontend/package.json | jq -r '.scripts'

      - name: Install Netlify CLI
        run: npm i -g netlify-cli

      # Runs @netlify/plugin-nextjs locally using netlify.toml at repo root
      - name: Netlify Build (with plugin)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: netlify build --context production --debug

      - name: Show Netlify build output
        run: |
          echo ".netlify/build:"
          ls -la .netlify/build || true
          echo ".netlify/functions:"
          ls -la .netlify/functions || true

      - name: Deploy to Netlify (prod)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: netlify deploy --prod --dir ".netlify/build" --message "CI deploy $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
