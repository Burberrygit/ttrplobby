# .github/workflows/deploy.yml
name: Build & Deploy to Netlify (Plugin Build, cached)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID:    ${{ secrets.NETLIFY_SITE_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (use npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: frontend/.next/cache
          key: next-cache-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}-${{ github.ref_name }}
          restore-keys: |
            next-cache-${{ runner.os }}-${{ github.ref_name }}-
            next-cache-${{ runner.os }}-

      - name: Restore Netlify cache
        uses: actions/cache@v4
        with:
          path: frontend/.netlify/cache
          key: netlify-cache-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}-${{ github.ref_name }}
          restore-keys: |
            netlify-cache-${{ runner.os }}-${{ github.ref_name }}-
            netlify-cache-${{ runner.os }}-

      - name: Install deps
        working-directory: frontend
        run: |
          set -euxo pipefail
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Ensure Netlify CLI + bootstrap helper
        working-directory: frontend
        run: |
          set -euxo pipefail
          npm i -D netlify-cli@^17 @netlify/edge-functions-bootstrap@latest @netlify/plugin-nextjs@latest

      # ✅ Link this repo to your Netlify site (writes frontend/.netlify/state.json)
      - name: Link Netlify site
        working-directory: frontend
        env:
          NETLIFY_AUTH_TOKEN: ${{ env.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID:    ${{ env.NETLIFY_SITE_ID }}
        run: |
          set -euxo pipefail
          npx netlify link --id "$NETLIFY_SITE_ID"

      # ✅ Build WITHOUT --site (build doesn’t accept it)
      - name: Netlify Build (with @netlify/plugin-nextjs)
        working-directory: frontend
        env:
          NETLIFY_AUTH_TOKEN: ${{ env.NETLIFY_AUTH_TOKEN }}
        run: |
          set -euxo pipefail
          npx netlify build --context production --debug

      - name: Show build results
        run: |
          set -euxo pipefail
          echo "frontend/.next:" && ls -la frontend/.next || true
          echo "frontend/.netlify:" && ls -la frontend/.netlify || true
          echo "frontend/.netlify/functions:" && ls -la frontend/.netlify/functions || true
          echo "frontend/.netlify/cache:" && ls -la frontend/.netlify/cache || true

      # You can keep --site here (deploy supports it), or omit since we're linked
      - name: Deploy to Netlify (prod)
        working-directory: frontend
        env:
          NETLIFY_AUTH_TOKEN: ${{ env.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID:    ${{ env.NETLIFY_SITE_ID }}
        run: |
          set -euxo pipefail
          npx netlify deploy --prod --build --auth "$NETLIFY_AUTH_TOKEN" --site "$NETLIFY_SITE_ID" --debug
